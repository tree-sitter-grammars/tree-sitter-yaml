{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "core_schema",
  "rules": {
    "scalar": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "null"
        },
        {
          "type": "SYMBOL",
          "name": "bool"
        },
        {
          "type": "SYMBOL",
          "name": "int"
        },
        {
          "type": "SYMBOL",
          "name": "float"
        },
        {
          "type": "SYMBOL",
          "name": "timestamp"
        }
      ]
    },
    "null": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "~"
          },
          {
            "type": "STRING",
            "value": "null"
          },
          {
            "type": "STRING",
            "value": "Null"
          },
          {
            "type": "STRING",
            "value": "NULL"
          }
        ]
      }
    },
    "bool": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "y"
          },
          {
            "type": "STRING",
            "value": "Y"
          },
          {
            "type": "STRING",
            "value": "yes"
          },
          {
            "type": "STRING",
            "value": "Yes"
          },
          {
            "type": "STRING",
            "value": "YES"
          },
          {
            "type": "STRING",
            "value": "n"
          },
          {
            "type": "STRING",
            "value": "N"
          },
          {
            "type": "STRING",
            "value": "no"
          },
          {
            "type": "STRING",
            "value": "No"
          },
          {
            "type": "STRING",
            "value": "NO"
          },
          {
            "type": "STRING",
            "value": "true"
          },
          {
            "type": "STRING",
            "value": "True"
          },
          {
            "type": "STRING",
            "value": "TRUE"
          },
          {
            "type": "STRING",
            "value": "false"
          },
          {
            "type": "STRING",
            "value": "False"
          },
          {
            "type": "STRING",
            "value": "FALSE"
          },
          {
            "type": "STRING",
            "value": "on"
          },
          {
            "type": "STRING",
            "value": "On"
          },
          {
            "type": "STRING",
            "value": "ON"
          },
          {
            "type": "STRING",
            "value": "off"
          },
          {
            "type": "STRING",
            "value": "Off"
          },
          {
            "type": "STRING",
            "value": "OFF"
          }
        ]
      }
    },
    "int": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "[-+]?0b[0-1_]+"
          },
          {
            "type": "PATTERN",
            "value": "[-+]?0[0-7_]+"
          },
          {
            "type": "PATTERN",
            "value": "[-+]?(0|[1-9][0-9_]*)"
          },
          {
            "type": "PATTERN",
            "value": "[-+]?0x[0-9a-fA-F_]+"
          },
          {
            "type": "PATTERN",
            "value": "[-+]?[1-9][0-9_]*(:[0-5]?[0-9])+"
          }
        ]
      }
    },
    "float": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "[-+]?([0-9][0-9_]*)?\\.[0-9.]*([eE][-+][0-9]+)?"
          },
          {
            "type": "PATTERN",
            "value": "[-+]?[0-9][0-9_]*(:[0-5]?[0-9])+\\.[0-9_]*"
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "STRING",
                        "value": "-"
                      },
                      {
                        "type": "STRING",
                        "value": "+"
                      }
                    ]
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": ".inf"
                  },
                  {
                    "type": "STRING",
                    "value": ".Inf"
                  },
                  {
                    "type": "STRING",
                    "value": ".INF"
                  }
                ]
              }
            ]
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": ".nan"
              },
              {
                "type": "STRING",
                "value": ".NaN"
              },
              {
                "type": "STRING",
                "value": ".NAN"
              }
            ]
          }
        ]
      }
    },
    "timestamp": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "\\d\\d\\d\\d-\\d\\d-\\d\\d"
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "PATTERN",
                "value": "\\d\\d\\d\\d-\\d\\d?-\\d\\d?"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "T"
                  },
                  {
                    "type": "STRING",
                    "value": "t"
                  },
                  {
                    "type": "PATTERN",
                    "value": "[ \\t]+"
                  }
                ]
              },
              {
                "type": "PATTERN",
                "value": "\\d\\d?:\\d\\d:\\d\\d"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "PATTERN",
                    "value": "\\.\\d+"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "PATTERN",
                        "value": "[ \\t]*Z"
                      },
                      {
                        "type": "PATTERN",
                        "value": "[-+]\\d\\d?(:\\d\\d)?"
                      }
                    ]
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        ]
      }
    }
  },
  "extras": [],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
